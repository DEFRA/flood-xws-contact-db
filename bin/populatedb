#!/bin/bash
DB_NAME=xws_contact

# Unzip shapefile and load the alert areas into a new table called "faa" xws_area schema
unzip -d faa EA_FloodAlertAreas_SHP_Full.zip
ogr2ogr -t_srs "EPSG:4326" -f "PostgreSQL" "PG:host=localhost dbname=$DB_NAME" "./faa/data/Flood_Alert_Areas.shp" -lco GEOMETRY_NAME=geom -lco FID=gid -lco PRECISION=no -lco SCHEMA=xws_area -nlt PROMOTE_TO_MULTI -nln faa -overwrite -progress
rm -rf faa

# Unzip shapefile and load the warning areas into a new table called "fwa" in the xws_area schema
unzip -d fwa EA_FloodWarningAreas_SHP_Full.zip
ogr2ogr -t_srs "EPSG:4326" -f "PostgreSQL" "PG:host=localhost dbname=$DB_NAME" "./fwa/data/Flood_Warning_Areas.shp" -lco GEOMETRY_NAME=geom -lco FID=gid -lco PRECISION=no -lco SCHEMA=xws_area -nlt PROMOTE_TO_MULTI -nln fwa -overwrite -progress
rm -rf fwa

# Now import the data from these new "faa" and "fwa" tables into the combined table xws.xws_area.area (also drops the temporary "faa" and "fwa" tables)
psql -Atx -d $DB_NAME -f populatedb.sql

psql -d $DB_NAME --tuples-only --pset format=unaligned --output areas-geo.json \
  -c "select json_agg(t) FROM (select \"code\", ST_AsGeoJson(centroid) as centroid, ST_AsGeoJson(bounding_box) as bounding_box from xws_area.area) t;"